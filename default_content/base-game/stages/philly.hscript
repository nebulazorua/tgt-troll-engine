var titleScreen = !inPlaystate;

var phillyCityLights = [];
var phillyTrain:FlxSprite;
var trainSound:FlxSound;

function cloneSpr(spr)
{
	var clone = spr.clone();
	clone.setPosition(spr.x, spr.y);
	clone.scale = spr.scale;
	clone.origin = spr.origin;
	clone.offset = spr.offset;
	clone.scrollFactor = spr.scrollFactor;
	return clone;
}

function onLoad()
{
	var bg:FlxSprite = new FlxSprite(-100, 0, Paths.image('stages/philly/sky'));
	bg.offset.set(-70, -16);
	bg.scrollFactor.set(0.1, 0.1);
	add(bg);

	////
	var city:FlxSprite = new FlxSprite(-10 + 32 * 0.85, 0 + 52 * 0.85, Paths.image('stages/philly/city'));
	city.scrollFactor.set(0.3, 0.3);
	city.scale.set(0.85, 0.85);
	city.updateHitbox();
	add(city);
	
	var cityL = cloneSpr(city);
	cityL.x -= city.width;
	add(cityL);
	
	var cityR = cloneSpr(city);
	cityR.x += city.width;
	add(cityR);
	
	/////
	lightFadeShader = Paths.getShader("buildingShader");
	lightFadeShader.data.alphaShit.value = [0];

	var phillyLightsColors = [0xFF31A2FD, 0xFF31FD8C, 0xFFFB33F5, 0xFFFD4531, 0xFFFBA633];
	var lightGraphic = Paths.image('stages/philly/window');
	for (i in 0...5)
	{
		var light:FlxSprite = new FlxSprite(-10, 0, lightGraphic);
		light.color = phillyLightsColors[i];
		light.scrollFactor.set(0.3, 0.3);
		light.visible = false;
		light.scale.set(0.85, 0.85);
		light.updateHitbox();
		light.shader = lightFadeShader;
		add(light);
		phillyCityLights.push(light);
	}

	phillyCityLights[0].visible = true;

	////
	var streetBehind:FlxSprite = new FlxSprite(-40, 50, Paths.image('stages/philly/behindTrain'));
	streetBehind.offset.set(-218, -97);
	add(streetBehind);

	////
	phillyTrain = new FlxSprite(2000, 360, Paths.image('stages/philly/train'));
	add(phillyTrain);

	trainSound = new FlxSound().loadEmbedded(Paths.sound('train_passes'));
    if(titleScreen)
        trainSound.volume = 0.5;
    
	FlxG.sound.list.add(trainSound);

	/////
	var street:FlxSprite = new FlxSprite(-40, streetBehind.y, Paths.image('stages/philly/street'));
	add(street);
	
	var streetL = cloneSpr(street);
	streetL.x -= street.width;
	add(streetL);
	
	var streetR = cloneSpr(street);
	streetR.x += street.width;
	add(streetR);
	
}

var startedMoving = false;
var trainFinishing = false;
var trainMoving = false;
var trainCars = 8;
var trainCooldown = 0;

function updateTrainPos(){
	if (trainSound.time >= 4700)
		startedMoving = true;

	if (startedMoving){
		phillyTrain.x -= 400;
		
		if(phillyTrain.x < -2000 && !trainFinishing){
			phillyTrain.x = -1150;
			trainCars--;
			if(trainCars <= 0){
				trainFinishing = true;
			}

		}
		if(phillyTrain.x < -4000 && trainFinishing)
			resetTrain();
		else
			game.gf.playAnim("hairBlow");
	}
}

function startTrain(){
	trainMoving = true;
	trainSound.play(true);
}

function resetTrain()
{
	phillyTrain.x = FlxG.width + 200;
	trainMoving = false;
	trainFinishing = false;
	startedMoving = false;
	trainCars = 8;

	game.gf.playAnim("hairFall");
}

function switchLight(){
	lightFadeShader.data.alphaShit.value = [0];
	for(light in phillyCityLights)
		light.visible = false;

	phillyCityLights[FlxG.random.int(0, phillyCityLights.length-1)].visible = true;	
}

onSongStart = switchLight;
onSectionHit = switchLight;

function onBeatHit(){
	if(!trainMoving)
		trainCooldown++;

	if(curBeat % 8 == 4 && FlxG.random.bool(30) && !trainMoving && trainCooldown >= 8){
		trainCooldown = FlxG.random.int(-4, 0);
		startTrain();
	}
}

var trainFrameTiming = 0;

function onUpdate(elapsed:Float){
	lightFadeShader.data.alphaShit.value[0] += (Conductor.crochet / 1000) * elapsed * 1.5;

	if(trainMoving){
		trainFrameTiming += elapsed;
		while(trainFrameTiming >= 1/24){
			updateTrainPos();
			trainFrameTiming -= 1/24;
		}
	}
}